{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAwBtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA9BbT,EAAKC,KAAKgB,iBAAiB,UAE3B,SAA4BC,GAC1BA,EAAIC,iBAEJ,MAAMC,EAASC,OAAOrB,EAAKM,YAAYgB,OACjCC,EAAaF,OAAOrB,EAAKI,WAAWkB,OACpCE,EAAOH,OAAOrB,EAAKK,UAAUiB,OAEnC,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAQK,GAAK,EAC/BlB,EAAckB,EAAI,EAAGD,EAAOC,EAAIF,GAC7BG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBX,EAAA6B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEhEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA6B,OAAOG,QAAQ,sBAAoBtB,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["// one by one\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onPromisesGenerate);\n\nfunction onPromisesGenerate(evt) {\n  evt.preventDefault();\n\n  const amount = Number(refs.amountInput.value);\n  const firstDelay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, step * i + firstDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    // .finally(evt.currentTarget.reset());\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","amount","Number","value","firstDelay","step","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.df37e5bf.js.map"}